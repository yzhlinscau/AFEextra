% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AF.Echidna.R
\name{AF.Echidna}
\alias{AF.Echidna}
\alias{get.es0.file}
\alias{echidna22}
\alias{update.esR}
\alias{subF}
\alias{b2s}
\alias{esRT}
\alias{raneff.acc}
\alias{predict.esR}
\alias{coef.esR}
\alias{wald.esR}
\alias{waldT.esR}
\alias{IC.esR}
\alias{trace.esR}
\alias{converge.esR}
\title{Summary of added functions for Echidna}
\usage{
get.es0.file(dat.file=NULL,es.file=NULL,
                        path=NULL,message= FALSE,
                        softp=NULL,
                        faS=NULL,pedS=NULL,Rsuffix=FALSE)

echidna(fixed,random,residual,
                   trait,family,weights, 
                   es0.file,softp,
                   delf,foldN,
                   trace,maxit,
                   Fmv,mu.delete,
                   mulT,met,cycle,
                   batch,mulN,mulp,
                   batch.G,batch.R,
                   subF,subV.org,
                   res.no,dat.file,  
                   run.purrr,selfing,
                   predict,vpredict,qualifier,jobqualf)

\method{update}{esR}(
  object,
  trait = NULL,
  fixed = NULL,
  random = NULL,
  residual = NULL,
  predict = NULL,
  vpredict = NULL,
  qualifier = NULL,
  jobqualf = NULL,
  trace = NULL,
  maxit = 30,
  selfing = NULL,
  mu.delete = NULL,
  mulN = NULL,
  mulT = NULL,
  met = NULL,
  cycle = NULL,
  softp = NULL,
  batch = NULL,
  batch.G = NULL,
  batch.R = NULL,
  subF = FALSE,
  subV.org = NULL,
  subV.Lv = NULL,
  res.no = NULL,
  dat.file = NULL,
  delf = NULL,
  foldN = NULL,
  ...
)

subF(fixed,random,residual,es0.file,
            subV.org, subV.nL,subV.new,mulN,res.no)

b2s(object)

esRT(path,trace=FALSE,mulT=FALSE,met=FALSE,cycle=FALSE)

raneff.acc(object,ran.eff,Var, ped=NULL)

\method{predict}{esR}(object)

\method{coef}{esR}(object)

\method{wald}{esR}(object)

\method{waldT}{esR}(object, term = NULL, ncol = NULL)

\method{IC}{esR}(object)

\method{trace}{esR}(object)

\method{converge}{esR}(object)
}
\arguments{
\item{dat.file}{data file to generate .es file.}

\item{es.file}{the .es file to generate .es0 file.}

\item{path}{the path for data files.}

\item{message}{show running procedure,FALSE(default).}

\item{softp}{the path for Echidna software.}

\item{fixed}{fixed effects, such as, c('Rep'), c('Site', 'Site.Rep') or 'Site Site.Rep', h3~1+Rep, etc.}

\item{random}{random effects, such as,'Mum','Mum Mum.Rep',~Mum+Mum:Rep, etc.}

\item{residual}{residual effects, such as,'units','ar1(row).ar1(col)',~ar1(row):ar1(col), etc.}

\item{trait}{aim trait for analysis, such as, 'h3', 'h3 h4',~h3+h4, etc, NULL(default).}

\item{family}{such as esr_binomial(), esr_poisson().}

\item{weights}{A variable used as weights in the fit.}

\item{es0.file}{the .es0 file.}

\item{delf}{delete all Echidna result files from the folder of .es0 file, TRUE(default).}

\item{foldN}{new folder name to store each run's results, only works when delf is 'FALSE'.}

\item{trace}{show iteration procedure,TRUE(default).}

\item{maxit}{maximum number of iterations, 30(default).}

\item{Fmv}{make missing values into fixed terms, FALSE(default).}

\item{mu.delete}{delete term mu or Trait from model, FALSE(default).}

\item{mulT}{multi-trait model,FALSE(default).}

\item{met}{multi-environment trial model,FALSE(default).}

\item{cycle}{Echidna result from qualifier cycle,FALSE(default).}

\item{batch}{run batch analysis for more than two trait at one time, FALSE(default).}

\item{mulN}{trait number for multi-trait analysis at one time, 2(default).}

\item{mulp}{multi-pin formula to run at one time, NULL(default).}

\item{batch.G}{run more than two G structures at one time, FALSE(default).}

\item{batch.R}{run more than two R structures at one time, FALSE(default).}

\item{subF}{run subF function for MET data sets,FALSE(default).}

\item{subV.org}{original variable for subF.}

\item{subV.Lv}{original variable level values for sub-setting.}

\item{res.no}{number to show results.}

\item{run.purrr}{using purrr packages for batch analysis,FALSE(default).}

\item{selfing}{the probability of selfing for parent, such as 0.1.}

\item{predict}{prediction for model terms.}

\item{vpredict}{run vpredict statements with Echidna soft.}

\item{qualifier}{model qualifiers, such as '!extra 5'.}

\item{jobqualf}{header line qualifiers, mainly '!view'.}

\item{object}{Echidna result object in R.}
}
\description{
Summary of added functions for Echidna
}
\details{
This package would supply some functions for Echidna. Details as following:
\tabular{ll}{
\strong{Function} \tab \strong{Description} \cr
\code{get.es0.file}  \tab generate .es0 file. \cr
\code{echidna}    \tab run mixed models. \cr
\code{wald}       \tab output wald results. \cr
\code{Var}        \tab output variance components. \cr
\code{summary}    \tab output summary results. \cr
\code{IC}         \tab output AIC and BIC values. \cr
\code{pin}        \tab run pin functions.\cr
\code{predict}    \tab output predict results.\cr
\code{plot}       \tab output model diagnose results.\cr
\code{coef}       \tab output fixed and random effects.\cr
\code{update}     \tab update mixed models.\cr
\code{b2s}        \tab transform batch esR results to single esR.\cr
\code{model.comp} \tab Model comparison for different mixed models.
}
}
\examples{
\dontrun{

 library(AFEchidna)

 
 ## generate .es0 file
 get.es0.file(dat.file='fm.csv')
 get.es0.file(es.file='fm.es')
 # file.edit('fm.es0')

res<-echidna(trait='h3',
              fixed='Rep',random='Fam',
              residual=NULL,predict=c('Fam'),
              es0.file="fm.es0")

## method 2                           
# res<-echidna(fixed=h3~1+Rep,random=~Fam,
#              residual=NULL,predict=c('Fam'),
#              es0.file="fm.es0")

 names(res)
 class(res)

 # model diagnose
 plot(res) 

 # wald result
 wald(res)
 waldT(res, term=c('mu','Rep'))
 

 # variance components
 Var(res)

 # summary result
 summary(res)

 # AIC,BIC result
 IC(res)

 # fixed and random effects
 coef(res)$fixed
 coef(res)$random

 # predict results if using predict functions
 mm<-predict(res)
 mm$pred

 # show vc results by using vpredict statements
 pin(res)

 # run pin function to count genetic parameters
 pin11(res,h2~V1/(V1+V2))
 pin(res,mulp=c(h2~V1/(V1+V2),h2f~V1/(V1+V2/4)))

 # model converge stage
 trace(res)
 res$Converge

}
}
\references{
Yuanzhen Lin. R & ASReml-R Statistics. China Forestry Publishing House. 2016 \cr
 Gilmour, A.R. (2020) Echidna Mixed Model Software www.EchidnaMMS.org
}
\author{
Yuanzhen Lin <yzhlinscau@163.com>
}
